{"remainingRequest":"/Users/oleh/Projects/VueTODO/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/oleh/Projects/VueTODO/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/oleh/Projects/VueTODO/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oleh/Projects/VueTODO/src/components/TodoList.vue?vue&type=template&id=3de47834&scoped=true&","dependencies":[{"path":"/Users/oleh/Projects/VueTODO/src/components/TodoList.vue","mtime":1584772845566},{"path":"/Users/oleh/Projects/VueTODO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/oleh/Projects/VueTODO/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/oleh/Projects/VueTODO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/oleh/Projects/VueTODO/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}